-- MySQL Script generated by MySQL Workbench
-- Sat Mar 22 19:41:42 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
SHOW WARNINGS;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`cliente`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`cliente` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `mydb`.`cliente` (
  `idCliente` INT NOT NULL,
  `nome` VARCHAR(45) NULL,
  `endereço` VARCHAR(45) NULL,
  `tipo_cliente` ENUM('PF', 'PJ') NULL,
  `CPF` VARCHAR(11) NULL,
  `data_nascimento` DATE NULL,
  `CNPJ` VARCHAR(14) NULL,
  `razão_social` VARCHAR(45) NULL,
  `forma_pagamento_idformaPagamento` INT NOT NULL,
  PRIMARY KEY (`idCliente`, `forma_pagamento_idformaPagamento`),
  INDEX `fk_cliente_forma_pagamento1_idx` (`forma_pagamento_idformaPagamento` ASC) VISIBLE,
  CONSTRAINT `fk_cliente_forma_pagamento1`
    FOREIGN KEY (`forma_pagamento_idformaPagamento`)
    REFERENCES `mydb`.`forma_pagamento` (`idformaPagamento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `mydb`.`disponibilizando um produto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`disponibilizando um produto` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `mydb`.`disponibilizando um produto` (
  `fornecedor_idFornecedor` INT NOT NULL,
  `produto_idProduto` INT NOT NULL,
  PRIMARY KEY (`fornecedor_idFornecedor`, `produto_idProduto`),
  INDEX `fk_fornecedor_has_produto_produto1_idx` (`produto_idProduto` ASC) VISIBLE,
  INDEX `fk_fornecedor_has_produto_fornecedor_idx` (`fornecedor_idFornecedor` ASC) VISIBLE,
  CONSTRAINT `fk_fornecedor_has_produto_fornecedor`
    FOREIGN KEY (`fornecedor_idFornecedor`)
    REFERENCES `mydb`.`fornecedor` (`idFornecedor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_fornecedor_has_produto_produto1`
    FOREIGN KEY (`produto_idProduto`)
    REFERENCES `mydb`.`produto` (`idProduto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `mydb`.`estoque`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`estoque` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `mydb`.`estoque` (
  `idestoque` INT NOT NULL,
  `local` VARCHAR(45) NULL,
  PRIMARY KEY (`idestoque`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `mydb`.`forma_pagamento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`forma_pagamento` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `mydb`.`forma_pagamento` (
  `idformaPagamento` INT NULL,
  `cliente_idcliente` VARCHAR(45) NULL,
  `tipo` VARCHAR(45) NULL,
  `dados_pagamento` TEXT(45) NULL,
  PRIMARY KEY (`idformaPagamento`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `mydb`.`fornecedor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`fornecedor` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `mydb`.`fornecedor` (
  `idFornecedor` INT NOT NULL,
  `razão social` VARCHAR(45) NULL,
  `CNPJ` VARCHAR(45) NULL,
  PRIMARY KEY (`idFornecedor`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `mydb`.`pedido`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`pedido` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `mydb`.`pedido` (
  `idPedido` INT NOT NULL,
  `status do pedido` VARCHAR(45) NULL,
  `descrição` VARCHAR(45) NULL,
  `cliente_idCliente` INT NOT NULL,
  `status_entrega` VARCHAR(45) NULL,
  `codigo_rastreio` VARCHAR(45) NULL,
  PRIMARY KEY (`idPedido`, `cliente_idCliente`),
  INDEX `fk_pedido_cliente1_idx` (`cliente_idCliente` ASC) VISIBLE,
  CONSTRAINT `fk_pedido_cliente1`
    FOREIGN KEY (`cliente_idCliente`)
    REFERENCES `mydb`.`cliente` (`idCliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `mydb`.`produto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`produto` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `mydb`.`produto` (
  `idProduto` INT NOT NULL,
  `categoria` VARCHAR(45) NULL,
  `descrição` VARCHAR(45) NULL,
  `valor` VARCHAR(45) NULL,
  PRIMARY KEY (`idProduto`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `mydb`.`produto_has_estoque`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`produto_has_estoque` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `mydb`.`produto_has_estoque` (
  `produto_idProduto` INT NOT NULL,
  `estoque_idestoque` INT NOT NULL,
  `quantidade` VARCHAR(45) NULL,
  PRIMARY KEY (`produto_idProduto`, `estoque_idestoque`),
  INDEX `fk_produto_has_estoque_estoque1_idx` (`estoque_idestoque` ASC) VISIBLE,
  INDEX `fk_produto_has_estoque_produto1_idx` (`produto_idProduto` ASC) VISIBLE,
  CONSTRAINT `fk_produto_has_estoque_produto1`
    FOREIGN KEY (`produto_idProduto`)
    REFERENCES `mydb`.`produto` (`idProduto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_produto_has_estoque_estoque1`
    FOREIGN KEY (`estoque_idestoque`)
    REFERENCES `mydb`.`estoque` (`idestoque`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `mydb`.`produtos por vendedor(terceiro)`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`produtos por vendedor(terceiro)` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `mydb`.`produtos por vendedor(terceiro)` (
  `terceiro-vendedor_idterceiro-vendedor` INT NOT NULL,
  `produto_idProduto` INT NOT NULL,
  `quantidade` INT NULL,
  PRIMARY KEY (`terceiro-vendedor_idterceiro-vendedor`, `produto_idProduto`),
  INDEX `fk_terceiro-vendedor_has_produto_produto1_idx` (`produto_idProduto` ASC) VISIBLE,
  INDEX `fk_terceiro-vendedor_has_produto_terceiro-vendedor1_idx` (`terceiro-vendedor_idterceiro-vendedor` ASC) VISIBLE,
  CONSTRAINT `fk_terceiro-vendedor_has_produto_terceiro-vendedor1`
    FOREIGN KEY (`terceiro-vendedor_idterceiro-vendedor`)
    REFERENCES `mydb`.`terceiro-vendedor` (`idterceiro-vendedor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_terceiro-vendedor_has_produto_produto1`
    FOREIGN KEY (`produto_idProduto`)
    REFERENCES `mydb`.`produto` (`idProduto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `mydb`.`relação produto/pedido`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`relação produto/pedido` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `mydb`.`relação produto/pedido` (
  `produto_idProduto` INT NOT NULL,
  `pedido_idPedido` INT NOT NULL,
  `quantidade` VARCHAR(45) NULL,
  PRIMARY KEY (`produto_idProduto`, `pedido_idPedido`),
  INDEX `fk_produto_has_pedido_pedido1_idx` (`pedido_idPedido` ASC) VISIBLE,
  INDEX `fk_produto_has_pedido_produto1_idx` (`produto_idProduto` ASC) VISIBLE,
  CONSTRAINT `fk_produto_has_pedido_produto1`
    FOREIGN KEY (`produto_idProduto`)
    REFERENCES `mydb`.`produto` (`idProduto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_produto_has_pedido_pedido1`
    FOREIGN KEY (`pedido_idPedido`)
    REFERENCES `mydb`.`pedido` (`idPedido`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `mydb`.`terceiro-vendedor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`terceiro-vendedor` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `mydb`.`terceiro-vendedor` (
  `idterceiro-vendedor` INT NOT NULL,
  `razão social` VARCHAR(45) NULL,
  `local` VARCHAR(45) NULL,
  PRIMARY KEY (`idterceiro-vendedor`))
ENGINE = InnoDB;

SHOW WARNINGS;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
